services:
    app:
      &app
      build:
        dockerfile: Dockerfile
      command:
        - "python"
        - "run_main.py"
      restart: always
      ports:
        - "8000:8000"
      depends_on:
        rabbitmq:
          condition: service_healthy


    taskiq-worker:
      <<: *app
      ports: [ ]
      command: [ taskiq, worker, core.taskiq.broker:broker, core.taskiq.tasks ]
      depends_on:
        rabbitmq:
          condition: service_healthy
        app:
          condition: service_started
      healthcheck:
        test: [ "CMD", "pgrep", "taskiq" ]
        interval: 5s
        timeout: 5s
        retries: 3


    db:
      image: postgres:16.2
      container_name: db
      restart: always
      env_file:
        - .template.env.docker
      volumes:
        - db:/var/lib/postgresql/data


    rabbitmq:
      container_name: rabbitmq
      image: rabbitmq:3-management
      ports:
        - "5672:5672"
        - "15672:15672"
      healthcheck:
        test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
        interval: 5s
        timeout: 5s
        retries: 5


volumes:
  db:
    driver: local
  redis_data:
    driver: local
